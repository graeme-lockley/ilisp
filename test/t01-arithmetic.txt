; (+)
(+)
> 0

; (+ 1)
(+ 1)
> 1

; (+ 1 2)
(+ 1 2)
> 3

; (+ 1 2 3)
(+ 1 2 3)
> 6

; (+ 1 2 3 4 5 6 7)
(+ 1 2 3 4 5 6 7)
> 28

; (+ 1 "hello")
(+ 1 "hello")
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 1 :procedure integer-plus}))

; (+ "hello" 1)
(+ "hello" 1)
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 0 :procedure integer-plus}))

; (-)
(-)
> 0

; (- 5)
(- 5)
> -5

; (- 5 2)
(- 5 2)
> 3

; (- 5 2 3)
(- 5 2 3)
> 0

; (- 1 2 3 4 5 6 7)
(- 1 2 3 4 5 6 7)
> -26

; (- 1 "hello")
(- 1 "hello")
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 1 :procedure integer-minus}))

; (- "hello" 1)
(- "hello" 1)
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 0 :procedure integer-minus}))

;; integer-multiply
; (*)
(*)
> 1

; (* 5)
(* 5)
> 5

; (* 5 2)
(* 5 2)
> 10

; (* 5 2 3)
(* 5 2 3)
> 30

; (* 1 2 3 4 5 6 7)
(* 1 2 3 4 5 6 7)
> 5040

; (* 1 "hello")
(* 1 "hello")
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 1 :procedure integer-multiply}))

; (* "hello" 1)
(* "hello" 1)
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 0 :procedure integer-multiply}))

;; integer-divide
; (/)
(/)
> 1

; (/ 1)
(/ 1)
> 1

; (/ 5)
(/ 5)
> 0

; (/ 5 2)
(/ 5 2)
> 2

; (/ 50 2 3)
(/ 50 2 3)
> 8

; (/ 100 2 5 2)
(/ 100 2 5 2)
> 5

; (/ 1 "hello")
(/ 1 "hello")
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 1 :procedure integer-divide}))

; (/ "hello" 1)
(/ "hello" 1)
> (:exception (InvalidArgument . {:received "hello" :expected-type "number" :arg-number 0 :procedure integer-divide}))

; (/ 10 0)
(/ 10 0)
> (:exception (DivideByZero . {:arg-number 1 :procedure integer-divide}))

[(+ 1 1) (+ 1 2) (+ 1 3)]
> [2 3 4]

{:a (+ 1 1) :b (+ 1 2)}
> {:a 2 :b 3}
