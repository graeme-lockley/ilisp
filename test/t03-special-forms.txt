; do with nothing
(do)
> ()

; do with one
(do (+ 10 1))
> 11

; do with many
(do 
  (assoc! (car **root**) 'x 10) 
  (assoc! (car **root**) 'x (+ x 1)) 
  x)
> 11


; if truthy without else 
(if 1 1)
> 1

; if falsy without else 
(if '() 1)
> ()

; if truthy with else 
(if 1 2 1)
> 2

; if falsy without else 
(if '() 2 1)
> 1

; if without anything
(if)
> (:exception (ExpectedArgumentCount . {:arguments () :max-arg-count 3 :min-arg-count 2 :procedure if}))

; if without then or else 
(if '())
> (:exception (ExpectedArgumentCount . {:arguments ((quote ())) :max-arg-count 3 :min-arg-count 2 :procedure if}))

; if with too many
(if '() 1 2 3)
> (:exception (ExpectedArgumentCount . {:arguments ((quote ()) 1 2 3) :max-arg-count 3 :min-arg-count 2 :procedure if}))
